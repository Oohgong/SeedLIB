<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seed.lib.book.shelf.BookShelfMapper">

	<select id="getBookTitle" parameterType="BookVO" resultType="String">
		select TITLE from book b where ISBN = #{isbn}
	</select>

	<select id="getShelfExist" parameterType="BookShelfVO" resultType="Integer">
		SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = #{userName}
	</select>
	
	<select id="getSameShelf" parameterType="BookShelfVO" resultType="Integer">
		SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = #{userName} AND SHNAME = #{shName}
	</select>
	
	<select id="getBookExist" parameterType="BookPickVO" resultType="Integer">
		SELECT COUNT(PICKNUM) FROM PICK WHERE ISBN = #{isbn} AND SHNUM = #{shNum}
	</select>
	
	<select id="getShelfList" parameterType="BookShelfVO" resultType="BookShelfVO">
		SELECT * FROM SHELF WHERE USERNAME = #{userName}
	</select>
	
	<select id="getShelfListP" parameterType="ShelfPager" resultType="BookShelfVO">
		SELECT *
			FROM SHELF S
			WHERE USERNAME = #{userName}
				<choose>
					<when test="select == 'name'">AND S.NAME LIKE CONCAT ('%', #{search}, '%')</when>
					<when test="select == 'memo'">AND S.MEMO LIKE CONCAT ('%', #{search}, '%')</when>
				</choose>
				
				<if test="dateA != null and dateB != null">
					AND S.CREDATE BETWEEN #{dateA} AND #{dateB}
				</if>
			ORDER BY
   			<choose>
   				<when test="sortHow == 'name'">S.NAME</when>
   				<when test="sortHow == 'memo'">S.MEMO</when>
   				<otherwise>S.CREDATE</otherwise>
   			</choose>
   			<choose>
   				<when test="sort == 'desc'">DESC</when>
   				<otherwise>ASC</otherwise>
   			</choose>
	    LIMIT #{startRow}, #{perPage}
	</select>
	
	<insert id="setShelfAdd" parameterType="BookShelfVO">
		INSERT INTO SHELF(USERNAME, SHNAME, SHMEMO)
			VALUES (#{userName}, #{shName}, #{shMemo});
	</insert>
	
	
	<delete id="setShelfDelete" parameterType="BookVO">
		delete from shelf
			where shName = #{shName} and username= #{userName}
	</delete>
	
	
	<update id="setShelfUpdate" parameterType="BookShelfVO">
		UPDATE SHELF
			SET SHNAME = #{shName} AND SHMEMO = #{shMemo}
		WHERE SHNUM = #{shNum}
	</update>
	
	
	<insert id="setBookAdd" parameterType="BookPickVO">
		INSERT INTO PICK(ISBN, SHNUM, REGDATE)
			VALUES (#{isbn}, #{shNum}, now());
	</insert>
	
	
	<delete id="setBookDelete" parameterType="BookPickVO">
		DELETE FROM PICK
			WHERE ISBN = #{isbn} ANS SHNUM = #{shNum}
	</delete>
	
	
	<select id="getBookList" parameterType="ShelfBookPager" resultMap="getBookList">
		SELECT P.*, S.SHNAME, S.SHMEMO, S.CREDATE, B.TITLE, B.WRITER
			FROM SHELF S
			INNER JOIN PICK P
			ON S.SHNUM = P.SHNUM
		
			INNER JOIN BOOK B
			ON P.ISBN = B.ISBN
		
			WHERE S.SHNUM = #{shNum}
				<choose>
					<when test="select == 'title'">AND B.TITLE LIKE CONCAT ('%', #{search}, '%')</when>
					<when test="select == 'writer'">AND B.WRITER LIKE CONCAT ('%', #{search}, '%')</when>
					<otherwise>AND B.ISBN LIKE CONCAT ('%', #{search}, '%')</otherwise>
				</choose>
				
				<if test="dateA != null and dateB != null">
					AND P.REGDATE BETWEEN #{dateA} AND #{dateB}
				</if>
			ORDER BY
   			<choose>
   				<when test="sortHow == 'title'">B.TITLE</when>
   				<when test="sortHow == 'writer'">B.WRITER</when>
   				<when test="sortHow == 'isbn'">B.ISBN</when>
   				<otherwise>P.REGDATE</otherwise>
   			</choose>
   			<choose>
   				<when test="sort == 'desc'">DESC</when>
   				<otherwise>ASC</otherwise>
   			</choose>
	    LIMIT #{startRow}, #{lastRow}
	</select>
	
	<resultMap type="BookVO" id="getBookList">
		<id column="isbn" property="isbn"/>
			<result column="title" property="title"/>
			<result column="writer" property="writer"/>
		<collection property="bookPickVOs" javaType="List" ofType="BookPickVO">
			<id column="pickNum" property="pickNum"/>
			<result column="isbn" property="isbn"/>
			<result column="shNum" property="shNum"/>
			<result column="regDate" property="regDate"/>
		</collection>
		<collection property="bookShelfVOs" javaType="List" ofType="BookShelfVO">
			<id column="shNum" property="shNum"/>
			<result column="shName" property="shName"/>
			<result column="shMemo" property="shMemo"/>
			<result column="creDate" property="creDate"/>
		</collection>
	</resultMap>
	
	
	<select id="getShelfCount" resultType="Long" parameterType="ShelfPager">
    	SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = #{userName}
	</select>
	
	
	<select id="getBookCount" resultType="Long" parameterType="ShelfBookPager">
    	SELECT COUNT(PICKNUM) FROM PICK WHERE SHNUM = #{shNum}
	</select>
</mapper>